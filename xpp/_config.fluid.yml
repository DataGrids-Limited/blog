--- #---------------------------
#---------------------------
# Hexo Fluid
# Author: Fluid-dev organization
# Github: https://github.com/fluid-dev/hexo-theme-fluid
#
# Docs：https://hexo.fluid-dev.com/docs/guide/
#---------------------------

#---------------------------
# 全局
# Site
favicon: /img/favicon.ico # 网站标签页的 icon

apple_touch_icon: /img/favicon.ico # 用于苹果设备的 icon

title_join_string: " - " # 浏览器标签页中的标题分隔符，效果： 文章名 - 站点名

force_https: true # 强制所有链接升级为 HTTPS（适用于图片等资源出现 HTTP 混入报错）

code:
  # 是否开启复制代码的按钮
  # Enable copy code button
  copy_btn: true

  # 代码语言
  # Code language
  language:
    enable: true
    default: "TEXT"

  # 代码高亮
  # Code highlight
  highlight:
    enable: true

    # 代码块是否显示行号
    # If true, the code block display line numbers
    line_number: true

    # 实现高亮的库，对应下面的设置
    # Highlight library
    # Options: highlightjs | prismjs
    lib: "highlightjs"

    highlightjs:
      # 在链接中挑选 style 填入
      # Select a style in the link
      # See: https://highlightjs.org/static/demo/
      style: "agate"
      style_dark: "agate"

    prismjs:
      # 在下方链接页面右侧的圆形按钮挑选 style 填入，也可以直接填入 css 链接
      # Select the style button on the right side of the link page, you can also set the CSS link
      # See: https://prismjs.com/
      style: "tomorrow night"
      style_dark: "tomorrow night"

      # 设为 true 高亮将本地静态生成（但只支持部分 prismjs 插件），设为 false 高亮将在浏览器通过 js 生成
      # If true, it will be generated locally (but some prismjs plugins are not supported). If false, it will be generated via JS in the browser
      preprocess: true

# 一些好玩的功能
# Some fun features
fun_features:
  # 为 subtitle 添加打字机效果
  # Typing animation for subtitle
  typing:
    enable: true

    # 打印速度，数字越大越慢
    # Typing speed, the larger the number, the slower
    typeSpeed: 70

    # 游标字符
    # Cursor character
    cursorChar: "_"

    # 是否循环播放效果
    # If true, loop animation
    loop: false

    # 在指定页面开启，不填则在所有页面开启
    # Enable in specified page, all pages by default
    # Options: home | post | tag | category | about | links | page | 404
    scope: []

  # 为文章内容中的标题添加锚图标
  # Add an anchor icon to the title on the post page
  anchorjs:
    enable: true
    element: h1,h2,h3,h4,h5,h6
    # Options: left | right
    placement: left
    # Options: hover | always | touch
    visible: hover
    # Options: § | # | ❡
    icon: "🍄"

  # 加载进度条
  # Progress bar when loading
  progressbar:
    enable: true
    height_px: 3
    color: "#29d"
    # See: https://github.com/rstacruz/nprogress
    options: { showSpinner: false, trickleSpeed: 100 }

dark_mode: # 主题暗色模式，开启后菜单中会出现切换按钮，用户浏览器会存储切换选项，并且会遵循 prefers-color-scheme 自动切换
  enable: true
  default: auto # 默认的模式：auto | light | dark，选择 auto 时优先遵循 prefers-color-scheme，其次按用户本地时间 18 点到次日 6 点之间进入暗色模式，**注意：当用户手动切换后则不再按照默认模式**

color: # 主题颜色配置，不一定能每一处都生效，可能会被局部样式覆盖，这种情况建议用自定义 css 解决。配色可以在这获得启发： https://www.webdesignrankings.com/resources/lolcolors/
  body_bg_color: "#eee" # body 背景色
  body_bg_color_dark: "#000000" # 暗色模式下的 body 背景色，下同
  navbar_bg_color: "#00bcd4" # 顶部菜单背景色
  navbar_bg_color_dark: "#009688"
  navbar_text_color: "#fff" # 顶部菜单字体色
  navbar_text_color_dark: "#d0d0d0"
  text_color: "#006064" # 全局字体色
  text_color_dark: "#e0f2f1"
  sec_text_color: "#757575" # 全局次级字体色（摘要、简介等位置）
  sec_text_color_dark: "#a7a9ad"
  post_text_color: "#00695c" # 文章正文字体色
  post_text_color_dark: "#c4c6c9"
  post_heading_color: "#1a202c" # 文章标题标签字体色（h1 h2 h3...）
  post_heading_color_dark: "#c4c6c9"
  post_link_color: "#0366d6" # 文章超链接字体色
  post_link_color_dark: "#1589e9"
  link_hover_color: "#30a9de" # 超链接悬浮时字体色
  link_hover_color_dark: "#30a9de"
  link_hover_bg_color: "#b2ebf2" # 超链接悬浮背景色
  link_hover_bg_color_dark: "#b2dfdb"
  board_color: "#fff" # 主面板背景色
  board_color_dark: "#212121"

font: # 主题字体配置
  font_size: 16px # 全局字号
  font_family: # 全局字体
  code_font_size: 85% # 代码的字号

custom_js: # 指定自定义 js 文件路径，路径是相对 source 目录，如 /js/custom.js 对应存放目录 source/js/custom.js，支持列表
custom_css: # 指定自定义 css 文件路径，路径是相对 source 目录，如 /css/custom.css 同上，支持列表
custom_html: "" # 自定义底部 HTML 内容（位于 footer 上方），也可用于外部引入 js css 这些操作，注意不要和 post.custom 配置冲突

# 网页访问统计
# Analysis of website visitors
web_analytics:  # 网页访问统计
  enable: true

  # 遵循访客浏览器"请勿追踪"的设置，如果开启则不统计其访问
  # Follow the "Do Not Track" setting of the visitor's browser
  # See: https://www.w3.org/TR/tracking-dnt/
  follow_dnt: false

  # 百度统计的 Key，值需要获取下方链接中 `hm.js?` 后边的字符串
  # Baidu analytics, get the string behind `hm.js?`
  # See: https://tongji.baidu.com/sc-web/10000033910/home/site/getjs?siteId=13751376
  baidu:

  # Google 统计的 Tracking ID
  # Google analytics, set Tracking ID
  # See: https://developers.google.com/analytics/devguides/collection/analyticsjs
  google: UA-245694154-1

  # Google gtag.js 的媒体资源 ID
  # Google gtag.js GA_MEASUREMENT_ID
  # See: https://developers.google.com/analytics/devguides/collection/gtagjs/
  gtag: G-XHSN1ZPXBG

  # 腾讯统计的 H5 App ID，开启高级功能才有cid
  # Tencent analytics, set APP ID
  # See: https://mta.qq.com/h5/manage/ctr_app_manage
  tencent:
    sid:
    cid:

  # 51.la 站点统计 ID
  # 51.la analytics
  # See: https://www.51.la/user/site/index
  woyaola:  # 51.la 站点统计 ID，参见

  # 友盟/cnzz 站点统计 web_id
  # cnzz analytics
  # See: https://web.umeng.com/main.php?c=site&a=show
  cnzz:

  # LeanCloud 计数统计，可用于 PV UV 展示，如果 `web_analytics: enable` 没有开启，PV UV 展示只会查询不会增加
  # LeanCloud count statistics, which can be used for PV UV display. If `web_analytics: enable` is false, PV UV display will only query and not increase
  leancloud:
    app_id:
    app_key:
    # REST API 服务器地址，国际版不填
    # Only the Chinese mainland users need to set
    server_url:
    # 统计页面时获取路径的属性
    # Get the attribute of the page path during statistics
    path: window.location.pathname
    # 开启后不统计本地路径( localhost 与 127.0.0.1 )
    # If true, ignore localhost & 127.0.0.1
    ignore_local: false

lazyload: # 对页面中的图片进行懒加载处理，可见范围外的图片不会加载
  enable: true
  onlypost: false # 仅在文章页使用懒加载，开启后如果自定义页面需要使用，可以在 Front-matter 里指定 `lazyload: true`

daovoice: # 在线客服 Daovoice 参考：http://dashboard.daovoice.io
  enable: false # 是否开启在线客服聊天
  appid: "" # 应用 ID 设置

aplayer: # 音乐播放器，注意不能与 hexo-tag-aplayer 插件共用
  enable: false
  autoplay: false # 音频自动播放
  loop: "all" # 音频循环播放, 可选值: 'all', 'one', 'none'
  order: "random" # 播放顺序，可选值: 'list', 'random'
  theme: "#b7daff" # 主题色
  songs: # 歌曲列表，必须传入下列各参数，其中 url 与 cover 在本地需存于 source 目录，更多参数见文档：https://aplayer.js.org/#/zh-Hans/?id=%E5%8F%82%E6%95%B0
    - {
        name: "name",
        artist: "artist",
        url: "/songs/test.mp3",
        cover: "/img/cover.jpg",
      }
    - {
        name: "name",
        artist: "artist",
        url: "https://...url.mp3",
        cover: "https://...cover.jpg",
      }

version: # 主题版本相关
  check: true # 每次生成页面后，检测主题是否为最新版本

#---------------------------
# 页头
# Header
#---------------------------
navbar:
  blog_title: "xpp的博客" # 导航栏左侧的标题，为空则按 hexo config.title 显示
  ground_glass: # 导航栏毛玻璃特效，实验性功能，可能会造成页面滚动掉帧和抖动，部分浏览器不支持会自动不生效
    enable: true
    px: 3 # 模糊像素，只能为数字，数字越大模糊度越高
    alpha: 0.7 # 透明度，只能为数字，范围 0~1，数字越大透明度越低，注意透明过度可能看不清菜单字体
  menu: # 可自行增减，key 用来关联 languages/*.yml，如不存在关联则显示 key 本身的值；icon 是 css class，可以省略；增加 name 可以强制显示指定名称
    - { key: "博客主页", link: "/", icon: "iconfont icon-home-fill" }
    # - {
    #     key: "shevonpeng工作室主页",
    #     link: "https://shevonpeng.cn",
    #     icon: "iconfont icon-home-fill",
    #   }
    #- { key: 'archive', link: '/archives/', icon: 'iconfont icon-archive-fill' }
    - { key: "分类", link: "/categories/", icon: "iconfont icon-category-fill" }
    - { key: "标签", link: "/tags/", icon: "iconfont icon-tags-fill" }
    - { key: "xpp在这里", link: "/about/", icon: "iconfont icon-user-fill" }
    #- { key: 'links', link: '/links/', icon: 'iconfont icon-link-fill' }  # 友链页，把前面#去掉即可展示

search: # 搜索栏，基于 hexo-generator-search 插件，若已安装其他搜索插件请关闭此功能，以避免生成多余的索引文件。
  enable: true
  path: /local-search.xml # 文件引用地址，默认是下方生成位置，也可以将生成后的 local-search.xml 上传到其它位置引用，如：https://www.example.com/local-search.xml
  generate_path: /local-search.xml # 文件生成位置，必须为相对位置
  field: post
  content: true

scroll_down_arrow: # 向下滚动的箭头
  enable: true
  banner_height_limit: 90 # 头图高度不小于指定比例，才显示箭头
  scroll_after_turning_page: true # 翻页后自动滚动

banner_parallax: true # 头图滚动视差

#---------------------------
# 页脚
# Footer
#---------------------------
footer:
  statistics: # 展示网站的 PV、UV 统计数
    enable: true
    source: "busuanzi" # 统计数据来源，可选：busuanzi | leancloud，使用 leancloud 需要在 web_analytics 中设置 api 参数，使用 busuanzi 注意可能间歇抽风
    pv_format: "总访问量 {} 次" # 显示的文本，{}是数字的占位符（必须包含)，下同
    uv_format: "总访客数 {} 人"

  beian: # The footer of China's website policy, other areas keep disable
    enable: true
    icp_text: # ICP证号
    police_text: #京公网安备12345678号 # 公安备案号，不填则只显示ICP
    police_code: #12345678 # 公安备案的编号，用于URL跳转查询
    police_icon: #/img/police_beian.png # 公安备案的图片. 为空时不显示备案图片

scroll_top_arrow: # 向顶部滚动的箭头
  enable: true

#---------------------------
# 首页
# Index Page
#---------------------------
index:
  banner_img: https://api.ixiaowai.cn/gqapi/gqapi.php #/img/index.jpg  # 首页 Banner 头图，以下相同
  banner_img_height: 100 # 头图高度，屏幕百分比，available: 0 - 100
  banner_mask_alpha: 0.3 # 头图黑色蒙版的透明度，available: 0 - 1.0， 0 是完全透明（无蒙版），1 是完全不透明
  post_default_img: "" # 默认的文章封面图，当没有指定 index_img 时会使用该图片，若都为空则不显示任何图片
  slogan: # 首页副标题的独立设置
    enable: true # 为 false 则不显示任何内容
    text: "xpp 的博客~" # 为空则按 hexo config.subtitle 显示
  auto_excerpt:
    enable: true
  post_url_target: _self # available: _blank | _self
  post_meta: # 是否显示文章信息（时间、分类、标签）
    date: true
    category: true
    tag: true

# 通过 hexo new page 命令创建的页面
# Custom Page
page:
  banner_img: https://api.ixiaowai.cn/gqapi/gqapi.php
  banner_img_height: 60 # available: 0 - 100
  banner_mask_alpha: 0.3 # available: 0 - 1.0

#---------------------------
# 文章页
# Post Page
#---------------------------
post: # 部分配置同时控制自定义页面，注意备注
  banner_img: https://api.ixiaowai.cn/gqapi/gqapi.php
  banner_img_height: 70 # available: 0 - 100
  banner_mask_alpha: 0.3 # available: 0 - 1.0
  meta: # 文章标题下方的信息
    author: # 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值
      enable: false
    date: # 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期
      enable: true
      format: "LL" # 格式参照 ISO-8601 日期格式化，可参照 http://momentjs.cn/docs/#/parsing/string-format/
    wordcount: # 字数统计
      enable: true
      format: "{} 字" # 显示的文本，{}是数字的占位符（必须包含)，下同
    min2read: # 阅读时间
      enable: true
      format: "{} 分钟"
      words: 60 # 每分钟阅读多少字，如果是技术文章，建议降低
    views: # 阅读次数
      enable: false
      source: "busuanzi" # 统计数据来源，可选：busuanzi | leancloud，使用 leancloud 需要在 web_analytics 中设置 api 参数，使用 busuanzi 注意可能间歇抽风
      format: "{} 次"
  updated: # 在文章开头显示文章更新时间，该时间默认是 md 文件更新时间，可通过 front-matter 中 `updated` 手动指定（和 date 一样格式）
    enable: false
    content: 本文最后更新于： # 描述文字
    relative: false # 是否使用相对时间表示，比如："3 天前"
  toc: # 文章右侧目录
    enable: true
    headingSelector: h1,h2,h3,h4,h5,h6
    collapseDepth: 0 # 层级的折叠深度，0 是全部折叠，6 是全部不折叠
  copyright: # 版权声明
    enable: true
    content: "©2022 ShevonKwan"
    # CreativeCommons license
    # Options: BY | BY-SA | BY-ND | BY-NC | BY-NC-SA | BY-NC-ND
    license: "BY-NC-SA"
    # 显示作者
    author:
      enable: true

    # 显示发布日期
    # Show post date
    post_date:
      enable: true
      format: "LL"

    # 显示更新日期
    # Show update date
    update_date:
      enable: false
      format: "LL"
  prev_next: # 文章底部上一篇下一篇功能
    enable: true
  custom: # 文章底部自定义内容
    enable: true
    content: "" # 自定义区域，支持 HTML，可自行插入赞赏码、公众号二维码等内容
  image_zoom: # 文章图片可点击放大
    enable: true # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `image_zoom: true`，并且图片使用该格式插入：<img src="..." zoom />
  footnote: # 脚注语法，会在文章底部生成脚注，如果 Markdown 渲染器本身支持，则建议关闭，否则可能会冲突
    enable: true
    header: "" # 脚注的节标题，也可以在 front-matter 中通过 `footnote: <h2>Reference</h2>` 这种形式修改单页的节标题
  math: # 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式
    enable: false # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`
    specific: true # 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度
    engine: mathjax # 公式引擎  available: mathjax | katex
  mermaid: # 流程图，基于 mermaid-js，文档：http://mermaid-js.github.io/mermaid/
    enable: false # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `mermaid: true`
    specific: false # 开启后，只有在文章 Front-matter 里指定 `mermaid: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度
    options: { theme: "default" } # 接口选项，具体可见：http://mermaid-js.github.io/mermaid/#/mermaidAPI
  comments: # 评论
    enable: true # 开启评论
    type: gitalk # 指定使用的评论模块  available: disqus | valine | gitalk | utterances | changyan | livere | remark42

#---------------------------
# 评论
# Comments
#---------------------------

# 开启评论需要先在上方 post.comments.enable: true

# utterances
# You can install utterances with https://utteranc.es/ and generate your configuration
utterances:
  repo:
  issue_term: pathname
  label: utterances
  theme: github-light
  theme_dark: github-dark
  crossorigin: anonymous

# Disqus
disqus:
  shortname: # your shortname
  # The following are Disqusjs configurations, please ignore if DisqusJS is not required
  # 以下为 Disqusjs 支持, 国内用户如果想使用 Disqus 建议配合使用
  # https://github.com/SukkaW/DisqusJS
  disqusjs: false # 设置为 true 开启 DisqusJS
  apikey: # DisqusJS 向 API 发起请求时使用的 API Key

# Gitalk
# You can get yout ClientID and ClientSecret from https://github.com/settings/applications/new
# More info available at https://github.com/gitalk/gitalk#options
gitalk:
  clientID: 0b0f7ebdeec21a04b950 # GitHub Application Client ID
  clientSecret: 2f3167cd2efc7e363364c1c5fdf3cab75aaa82a2 # GitHub Application Client Secret
  repo: blog # The repo to store comments
  owner: ShevonKuan # GitHub repository owner. Can be personal user or organization.
  admin: ["ShevonKuan"] # GitHub repo owner and collaborators, only these guys can initialize github issues, should be like ['admin'] or ['admin1','admin2']
  id: https://blog.datagrids.dev/shevon/ # The unique id of the page. Length must less than 50.
  language: zh-CN # Localization language key, en, zh-CN and zh-TW are currently available.
  labels: ["Comments"] # GitHub issue labels.
  perPage: 10 # Pagination size, with maximum 100.
  pagerDirection: last # Comment sorting direction, available values are last and first.
  distractionFreeMode: false # Facebook-like distraction free mode.
  createIssueManually: false # By default, Gitalk will create a corresponding github issue for your every single page automatically when the logined user is belong to the admin users. You can create it manually by setting this option to true.

# Valine
# 完整文档 https://valine.js.org/configuration.html
# 注意：下列配置项中的 true/false 不要用引号括起来
valine:
  appid: # 从 LeanCloud 的应用中得到的 appId
  appkey: # 从 LeanCloud 的应用中得到的 APP Key
  placeholder: 说点什么 # 评论框占位提示符
  path: window.location.pathname # 当前文章页路径，用于区分不同的文章页，以保证正确读取该文章页下的评论列表
  avatar: retro # Gravatar 头像展示方式
  meta: ["nick", "mail", "link"] # 评论者相关属性
  pageSize: 10 # 评论列表分页，每页条数
  lang: zh-CN # zh-CN | zh-TW | en | ja
  highlight: false # 代码高亮
  recordIP: false # 是否记录评论者IP
  serverURLs: # REST API 服务器地址，国际版不填

# 畅言
# http://changyan.kuaizhan.com/
changyan:
  appid: ""
  appkey: ""

# Livere 来必力
# You can get your uid from https://www.livere.com/my_Livere
livere:
  uid: ""

# Remark42
# https://remark42.com/
remark42:
  host: https://remark.haoyizebo.com
  site_id: haoyizebo
  max_shown_comments: 10
  locale: zh

#---------------------------
# 归档页
# Archive Page
#---------------------------
archive:
  banner_img: /img/post.jpg
  banner_img_height: 60 # available: 0 - 100
  banner_mask_alpha: 0.3 # available: 0 - 1.0
  subtitle: # 打字机内容

#---------------------------
# 分类归档页
# Categories Page
#---------------------------
category:
  banner_img: /img/post.jpg
  banner_img_height: 60 # available: 0 - 100
  banner_mask_alpha: 0.3 # available: 0 - 1.0
  subtitle: 归类 # 打字机内容
  post_limit: 10 # 单个分类中折叠展示文章数的最大值，超过限制会显示 More
  order_by: "-length" # 排序字段，前面带减号是倒序，不带减号是正序，可选项：name | length
  collapse_depth: 0 # 层级的折叠深度，0 是全部折叠，大于 0 后如果存在子分类则默认展开

#---------------------------
# 标签归档页
# Tags Page
#---------------------------
tag:
  banner_img: /img/post.jpg
  banner_img_height: 80 # available: 0 - 100
  banner_mask_alpha: 0.3 # available: 0 - 1.0
  subtitle: # 打字机内容
  tagcloud: # 标签云
    min_font: 15
    max_font: 30
    unit: px # 字号单位
    start_color: "#BBBBEE"
    end_color: "#337ab7"

#---------------------------
# 关于页
# About Page
#---------------------------
about: # 关于页需要手动创建，具体请见：https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E9%A1%B5
  banner_img: /img/about.jpg
  banner_img_height: 70 # available: 0 - 100
  banner_mask_alpha: 0.3 # available: 0 - 1.0
  subtitle: "xpp 的主页~" # 打字机内容
  avatar: /img/xpp.png # 头像
  name: "xpp"
  introduce: "这是xpp的博客,xpp很笨呢,可是却想学好多的东西,因为这个世界真的太厉害了,(ง •_•)ง.所以学到了些啥就像记录一下,怕自己忘记了." # 支持 HTML
  icons: # 更多图标可从 https://hexo.fluid-dev.com/docs/icon/ 查找，class 代表图标的 css class
    - {
        class: "iconfont icon-github-fill",
        link: "https://github.com/Lovely-XPP",
        tip: "GitHub",
      }
    #- { class: 'iconfont icon-twitter-fill', link: 'https://twitter.com/dnomd343', tip: 'Twitter' }
    #- {
    #    class: "iconfont icon-zhihu-fill",
    #    link: "https://www.zhihu.com/people/shevon-kuan",
    #    tip: "知乎",
    #  }
    - { class: "iconfont icon-wechat-fill", qrcode: "/img/qrcode.jpg" } # 添加 qrcode 后，点击不再跳转，而是悬浮二维码，需要指定 image

#---------------------------
# 404页
# 404 Page
#---------------------------
page404:
  banner_img: /img/404.jpg
  banner_img_height: 100 # available: 0 - 100
  banner_mask_alpha: 0.3 # available: 0 - 1.0
  subtitle: "404 - Page not found" # 打字机内容

#---------------------------
# 友链页
# Links Page
#---------------------------
links:
  banner_img: /img/links.jpg
  banner_img_height: 60 # available: 0 - 100
  banner_mask_alpha: 0.3 # available: 0 - 1.0
  subtitle: # 打字机内容
  items: # intro 与 image 可省略
    - {
        title: "Fluid Docs",
        intro: "主题使用指南",
        link: "https://hexo.fluid-dev.com/docs/",
        image: "/img/favicon.png",
      }
    - {
        title: "Fluid Repo",
        intro: "主题 GitHub 仓库",
        link: "https://github.com/fluid-dev/hexo-theme-fluid",
        image: "/img/favicon.png",
      }
    - {
        title: "Fluid Example",
        intro: "主题操作示例",
        link: "https://hexo.fluid-dev.com/docs/example/",
        image: "/img/favicon.png",
      }
